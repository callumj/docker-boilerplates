FROM ruby:2.5.0

# build the app directory
RUN mkdir /app
WORKDIR /app

# Add NodeJS 8.x repo (for latest LTS)
RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -

# install any system packages your applications might depend on
# * NodeJS is being added as the Rails Asset Pipeline requires this to precompile
# You may also want build-essential when building native extensions
RUN apt-get update && apt-get install -y nodejs --no-install-recommends && rm -rf /var/lib/apt/lists/*

# install Yarn to support additional Rails Asset Pipeline features
RUN npm install --global yarn

# drop just the Gemfile in, to keep image layers small
ADD Gemfile Gemfile.lock /app/
RUN bundle install --deployment --without development test

# add only the Rails folders needed for staging/production deployments
ADD bin /app/bin
ADD public /app/public
ADD config /app/config
ADD vendor /app/vendor
ADD db /app/db
ADD lib /app/lib
ADD app /app/app
ADD config.ru Rakefile package.json /app/

# force logging to STDOUT (instead of file logger)
ENV RAILS_LOG_TO_STDOUT true

# for larger deploymnets you may wish to move assets to a CDN and keep them out of a docker image
# e.g. your CI would perform the asset compliation and then upload a object store fronted by a CDN
RUN RAILS_ENV=production bundle exec rake assets:clobber assets:precompile

# you may want to pass down to Docker build the Git SHA this was built with
# you could then add a Rack middleware that appends this to a X-App-Version header for debugging
ARG GIT_SHA
ENV GIT_SHA ${GIT_SHA:-unknown}